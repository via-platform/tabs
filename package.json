{
  "name": "tabs",
  "version": "0.4.1",
  "description": "Via workspace tabs.",
  "main": "./lib/main",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "via",
    "trading",
    "tabs"
  ],
  "repository": "https://github.com/via-platform/tabs",
  "author": "Dakota Gordon",
  "engines": {
    "via": "*"
  },
  "dependencies": {
    "fs-plus": "^3.0.0",
    "temp": "^0.8.1",
    "underscore-plus": "^1.0.0"
  },
  "configSchema": {
    "showIcons": {
      "type": "boolean",
      "default": true,
      "description": "Show icons in tabs for panes which define an icon, such as the Settings and Project Find Results."
    },
    "alwaysShowTabBar": {
      "type": "boolean",
      "default": true,
      "description": "Show the tab bar even when only one tab is open."
    },
    "tabScrolling": {
      "type": "any",
      "enum": [
        true,
        false,
        "platform"
      ],
      "default": "platform",
      "description": "Jump to next or previous tab by scrolling on the tab bar."
    },
    "tabScrollingThreshold": {
      "type": "integer",
      "default": 120,
      "description": "Threshold for switching to the next/previous tab when the `Tab Scrolling` config setting is enabled. Higher numbers mean that a longer scroll is needed to jump to the next/previous tab."
    },
    "enableVcsColoring": {
      "type": "boolean",
      "title": "Enable VCS Coloring",
      "default": false,
      "description": "Color file names in tabs based on VCS status, similar to how file names are colored in the tree view."
    },
    "addNewTabsAtEnd": {
      "type": "boolean",
      "default": false,
      "description": "Add new tabs at the end of the tab bar, rather than after active tab."
    },
    "enableMruTabSwitching": {
      "type": "boolean",
      "title": "Enable MRU Tab Switching",
      "default": true,
      "description": "Enable tab switching in most-recently-used order. This setting has no effect if ctrl-tab or ctrl-shift-tab are already rebound via your keymap or another package."
    }
  },
  "false": {}
}
